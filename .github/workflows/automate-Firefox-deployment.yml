name: Release Autofill-Form Extension
on:
  workflow_dispatch:
  push:
    branches: [ 1-ramzi-deployement ]
    tags:
      - 'v*' # Déclenche le workflow pour les tags commençant par 'v'
env:
  DIRECTORY: dist
  PROJECT_NAME: autofill-form

jobs:
  Build:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.create_version.outputs.version }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version-file: package.json
          cache: npm
      - run: npm ci
      - name: Build extension
        run: npm run build
      - name: Create version
        id: create_version
        run: |
          VERSION_FILE="version.txt"
          if [ -f "$VERSION_FILE" ]; then
            VERSION=$(cat $VERSION_FILE)
            echo "Using existing version: $VERSION"
          else
            VERSION="1.0.0"
            echo "Setting initial version: $VERSION"
          fi
          echo "$VERSION" > $VERSION_FILE
          echo "version=$VERSION" >> $GITHUB_OUTPUT
      - name: List files in dist directory
        run: ls -R $DIRECTORY
      - name: Update manifest.json
        run: |
          MANIFEST_PATH="$DIRECTORY/grat-extension/browser/manifest.json"
          if [ -f "$MANIFEST_PATH" ]; then
            sed -i 's/"version":.*/"version": "${{ steps.create_version.outputs.version }}",/' "$MANIFEST_PATH"
            echo "Updated manifest.json version to ${{ steps.create_version.outputs.version }}"
          else
            echo "Error: $MANIFEST_PATH not found"
            exit 1
          fi
      - name: Package extension
        run: |
          cd $DIRECTORY
          zip -r ../$PROJECT_NAME-${{ steps.create_version.outputs.version }}.zip .
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: extension
          path: ${{ env.PROJECT_NAME }}-${{ steps.create_version.outputs.version }}.zip

  Firefox:
    needs: Build
    name: Submit to Firefox Add-ons
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: extension
      - name: Install web-ext
        run: npm install -g web-ext@latest
      - name: Unzip extension
        run: unzip ${{ env.PROJECT_NAME }}-${{ needs.Build.outputs.version }}.zip -d extension_dir
      - name: Sign and submit to Firefox Add-ons
        run: |
          cd extension_dir/grat-extension/browser
          web-ext sign --channel listed --source-dir .
        env:
          WEB_EXT_API_KEY: ${{ secrets.AMO_JWT_ISSUER }}
          WEB_EXT_API_SECRET: ${{ secrets.AMO_JWT_SECRET }}
